<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jiin.admin.mapper.data.LayerMapper">
    <select id="findMaxVersion" resultType="double">
        SELECT MAX(VERSION) FROM _LAYER
    </select>

    <select id="countByPageModel" resultType="long">
        SELECT COUNT(*) FROM _LAYER L
        <where>
            <choose>
                <when test='sb == 1'> L.NAME LIKE CONCAT('%', #{st}, '%') </when>
                <when test='sb == 2'> L.REGISTOR_ID LIKE CONCAT('%', #{st}, '%') </when>
                <when test='sb == 3'> LOWER(L.PROJECTION) LIKE CONCAT('%', #{st}, '%') </when>
                <otherwise> 1=1 </otherwise>
            </choose>
            <if test="lType != 'ALL'">
                AND L.TYPE = #{lType}
            </if>
            <if test="sDate != null and !sDate.equals('') and eDate != null and !eDate.equals('')">
                AND L.REGIST_TIME BETWEEN TO_TIMESTAMP(#{sDate}, 'YYYY-MM-DD') AND TO_TIMESTAMP(#{eDate}, 'YYYY-MM-DD')
            </if>
        </where>
    </select>

    <select id="findAll" resultType="LayerDTO">
        SELECT * FROM _LAYER
    </select>

    <select id="findByPageModel" resultType="LayerDTO">
        <bind name="start" value="(pg - 1) * sz" />
        SELECT * FROM _LAYER L
        <where>
            <choose>
                <when test='sb == 1'> L.NAME LIKE CONCAT('%', #{st}, '%') </when>
                <when test='sb == 2'> L.REGISTOR_ID LIKE CONCAT('%', #{st}, '%') </when>
                <when test='sb == 3'> LOWER(L.PROJECTION) LIKE CONCAT('%', #{st}, '%') </when>
                <otherwise> 1=1 </otherwise>
            </choose>
            <if test="lType != 'ALL'">
                AND L.TYPE = #{lType}
            </if>
            <if test="sDate != null and !sDate.equals('') and eDate != null and !eDate.equals('')">
                AND L.REGIST_TIME BETWEEN TO_TIMESTAMP(#{sDate}, 'YYYY-MM-DD') AND TO_TIMESTAMP(#{eDate}, 'YYYY-MM-DD')
            </if>
        </where>
        ORDER BY
        <choose>
            <when test='ob == 1'>L.ID ASC</when>
            <when test='ob == 2'>L.NAME ASC</when>
            <when test='ob == 3'>L.REGIST_TIME DESC</when>
            <otherwise>L.ID DESC</otherwise>
        </choose>
        <choose>
            <when test="start gte 0">
                LIMIT ${sz} OFFSET ${start}
            </when>
            <otherwise>
                LIMIT 0
            </otherwise>
        </choose>
    </select>

    <select id="findById" resultType="LayerDTO">
        SELECT * FROM _LAYER WHERE ID = #{id}
    </select>

    <select id="findByName" resultType="LayerDTO">
        SELECT * FROM _LAYER WHERE NAME = #{name}
    </select>

    <select id="findByMapId" resultType="LayerDTO">
        SELECT L.* FROM _LAYER L
        LEFT JOIN _MAP_LAYER_RELATION ML
        ON ML.LAYER_ID = L.ID
        WHERE ML.MAP_ID = #{mapId}
    </select>

    <insert id="insert">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT NEXTVAL('LAYER_SEQ')
        </selectKey>
        INSERT INTO _LAYER(ID, NAME, TYPE, DATA_FILE_PATH, DESCRIPTION, IS_DEFAULT, LAYER_FILE_PATH, MIDDLE_FOLDER, PROJECTION, REGISTOR_ID, REGISTOR_NAME, REGIST_TIME, UPDATE_TIME, VERSION)
        VALUES(#{id}, #{name}, #{type}, #{dataFilePath}, #{description}, #{isDefault}, #{layerFilePath}, #{middleFolder}, #{projection}, #{registorId}, #{registorName}, #{registTime}, #{updateTime}, #{version})
    </insert>

    <update id="update">
        UPDATE _LAYER SET
            NAME = #{name}, TYPE = #{type}, DATA_FILE_PATH = #{dataFilePath},
            DESCRIPTION = #{description}, IS_DEFAULT = #{isDefault},
            LAYER_FILE_PATH = #{layerFilePath}, MIDDLE_FOLDER = #{middleFolder},
            PROJECTION = #{projection}, REGISTOR_ID = #{registorId},
            REGISTOR_NAME = #{registorName}, REGIST_TIME = #{registTime},
            UPDATE_TIME = #{updateTime}, VERSION = #{version}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM _LAYER
        WHERE ID = #{id}
    </delete>
</mapper>
